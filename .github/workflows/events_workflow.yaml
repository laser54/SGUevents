name: events workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    if: github.repository == 'laser54/SGUevents' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  build_and_push_to_docker_hub:
    if: github.repository == 'laser54/SGUevents' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ${{ secrets.DOCKER_USERNAME }}/events:latest

  deploy:
    if: github.repository == 'laser54/SGUevents' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: SSH into remote server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/event.larin.work
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/events:latest
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            touch .env
            echo "DB_ENGINE=${{ secrets.DB_ENGINE }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DJANGO_ENV=${{ secrets.DJANGO_ENV }}" >> .env
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
            echo "ADMIN_TG_NAME=${{ secrets.ADMIN_TG_NAME }}" >> .env
            echo "SUPPORT_CHAT_ID=${{ secrets.SUPPORT_CHAT_ID }}" >> .env
            sudo docker-compose up -d
